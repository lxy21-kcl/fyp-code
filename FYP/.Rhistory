}
# 重新命名列
colnames(ORds) <- c("PMID","Cancer_type", "Label", "Sample_size",
"OR_BICR_exp", "OR_BICR_L_exp", "OR_BICR_U_exp",
"OR_BICR_c", "OR_BICR_L_c", "OR_BICR_U_c",
"OR_INV_exp", "OR_INV_L_exp", "OR_INV_U_exp",
"OR_INV_c", "OR_INV_L_c", "OR_INV_U_c")
# 计算 BICR 和 INV 的 OR
ORds$OR_BICR <- (ORds$OR_BICR_exp * (1 - ORds$OR_BICR_exp)) / (ORds$OR_BICR_c * (1 - ORds$OR_BICR_c))
ORds$OR_INV <- (ORds$OR_INV_exp * (1 - ORds$OR_INV_exp)) / (ORds$OR_INV_c * (1 - ORds$OR_INV_c))
View(ORds)
# 创建 ORds 数据框
ORds <- as.data.frame(cbind(ds$PMID, ds$Cancer.Type,ds$Blinded.open.label, ds$Sample.size,
ds$BICR.ORR.experimental, ds$X95..CI.BICR.ORR.L.experimental, ds$X95..CI.BICR.ORR.U.experimental,
ds$BICR.ORR.control, ds$X95..CI.BICR.ORR.L.control, ds$X95..CI.BICR.ORR.U.control,
ds$INV.ORR.experimental, ds$X95..CI.INV.ORR.L.experimental, ds$X95..CI.INV.ORR.U.experimental,
ds$INV.ORR.control, ds$X95..CI.INV.ORR.L.control, ds$X95..CI.INV.ORR.U.control))
View(ORds)
ds <- read.csv("datainfo_transpose_1.20.csv", stringsAsFactors = FALSE, fileEncoding = "latin1")
ds<-ds[ds$Study.Phase=="3",]
View(ds)
# 创建 ORds 数据框
ORds <- as.data.frame(cbind(ds$ï..PMID, ds$Cancer.Type,ds$Blinded.open.label, ds$Sample.size,
ds$BICR.ORR.experimental, ds$X95..CI.BICR.ORR.L.experimental, ds$X95..CI.BICR.ORR.U.experimental,
ds$BICR.ORR.control, ds$X95..CI.BICR.ORR.L.control, ds$X95..CI.BICR.ORR.U.control,
ds$INV.ORR.experimental, ds$X95..CI.INV.ORR.L.experimental, ds$X95..CI.INV.ORR.U.experimental,
ds$INV.ORR.control, ds$X95..CI.INV.ORR.L.control, ds$X95..CI.INV.ORR.U.control))
# 转换为数值型
num_cols <- 4:16  # 这些是数值列
char_cols <- c(1,2,3)  # 这些是字符列
for (i in num_cols) {
ORds[, i] <- as.numeric(ORds[, i])
}
for (i in char_cols) {
ORds[, i] <- as.character(ORds[, i])
}
# 重新命名列
colnames(ORds) <- c("PMID","Cancer_type", "Label", "Sample_size",
"OR_BICR_exp", "OR_BICR_L_exp", "OR_BICR_U_exp",
"OR_BICR_c", "OR_BICR_L_c", "OR_BICR_U_c",
"OR_INV_exp", "OR_INV_L_exp", "OR_INV_U_exp",
"OR_INV_c", "OR_INV_L_c", "OR_INV_U_c")
# 计算 BICR 和 INV 的 OR
ORds$OR_BICR <- (ORds$OR_BICR_exp * (1 - ORds$OR_BICR_exp)) / (ORds$OR_BICR_c * (1 - ORds$OR_BICR_c))
ORds$OR_INV <- (ORds$OR_INV_exp * (1 - ORds$OR_INV_exp)) / (ORds$OR_INV_c * (1 - ORds$OR_INV_c))
# 删除 NA 值
ORds <- ORds[!is.na(ORds$OR_BICR) & !is.na(ORds$OR_INV), ]
# 计算 Pearson 相关系数 (r) and 95% CI
cor_test <- cor.test(log(ORds$OR_BICR), log(ORds$OR_INV), method = "pearson")
r_value <- cor_test$estimate  # 相关系数 r
r_ci <- cor_test$conf.int  # 95% 置信区间
r_value
r_ci
cat("Pearson r:", round(r_value, 3), "95% CI:", round(r_ci, 3), "\n")
# 计算 R² and 95% 置信区间（使用加权回归）
lm_model <- lm(log(ORds$OR_INV) ~ log(ORds$OR_BICR), weights = ORds$Sample_size)
R2_value <- summary(lm_model)$r.squared  # 计算 R²
# Bootstrap 计算 R² 置信区间
rsq_function <- function(data, indices) {
d <- data[indices, ]  # 重新抽样
model <- lm(log(OR_INV) ~ log(OR_BICR), data = d, weights = d$Sample_size)
return(summary(model)$r.squared)
}
boot_result <- boot(ORds, rsq_function, R = 1000)
R2_ci <- boot.ci(boot_result, type = "perc")$percent[4:5]  # 提取 95% CI
# 绘制散点图 + 加权回归直线
#OR 回归直线的 95% 置信区间 以阴影表示。
library(ggplot2)
library(dplyr)
# Merge "blinded" and "double-blind" into "blinded"
ORds <- ORds %>%
mutate(Label = case_when(
Label %in% c("blinded", "double-blind") ~ "blinded",
TRUE ~ Label  # Keep other labels unchanged
))
ggplot(ORds, aes(x = log(OR_INV), y = log(OR_BICR), size = Sample_size, color = Label)) +
geom_point(alpha = 0.3) +  # 绘制散点
geom_smooth(method = "lm", se = TRUE, color = "black", size = 0.5, inherit.aes = FALSE,
aes(x = log(OR_INV), y = log(OR_BICR))) +  # 如果不要置信区间 se=FALSE
scale_size_continuous(name = "Sample Size", range = c(2, 10)) +
scale_color_manual(values = c("open label" = "red", "blinded" = "blue")) +  # Only "open label" and "blinded"
labs(title = "Correlation between OR_BICR and OR_INV",
subtitle = paste0("r = ", round(r_value, 3), " (95% CI: ", round(r_ci[1], 3), "-", round(r_ci[2], 3), ")",
"\nR² = ", round(R2_value, 3), " (95% CI: ", round(R2_ci[1], 3), ")"),
x = "Log LE OR for Response",
y = "Log BICR OR for Response",
color = "Study Type") +  # 设置图例标题
theme_minimal() +
guides(size = guide_legend())  # 确保size图例正确显示
#HR 回归直线的 95% 置信区间 以阴影表示。
HRds <- as.data.frame(cbind(ds$ï..PMID, ds$Sample.size, ds$HR.for.BICR.PFS, ds$X95..CI.BICR.HR.L, ds$X95..CI.BICR.HR.U,
ds$HR.for.INV.PFS, ds$X95..CI.INV.L, ds$X95..CI.INV.U,ds$follow.up.time, ds$Cancer.Type, ds$Blinded.open.label))
print(ncol(HRds))
num_cols <- 2:9
char_cols <- c(1, 10, 11)
for (i in num_cols) {
HRds[, i] <- as.numeric(HRds[, i])
}
for (i in char_cols) {
HRds[, i] <- as.character(HRds[, i])
}
colnames(HRds) <- c("PMID", "Sample_size", "HR_BICR", "HR_BICR_L", "HR_BICR_U",
"HR_INV", "HR_INV_L", "HR_INV_U", "follow-up time","Cancer_type", "Label")
HRds <- HRds[!is.na(HRds$HR_BICR) & !is.na(HRds$HR_INV),]
ggplot(ORds, aes(x = log(OR_INV), y = log(OR_BICR), size = Sample_size, color = Label)) +
geom_point(alpha = 0.3) +  # 绘制散点
geom_smooth(method = "lm", se = TRUE, color = "black", size = 0.5, inherit.aes = FALSE,
aes(x = log(OR_INV), y = log(OR_BICR))) +  # 如果不要置信区间 se=FALSE
scale_size_continuous(name = "Sample Size", range = c(2, 10)) +
scale_color_manual(values = c("open label" = "red", "blinded" = "blue")) +  # Only "open label" and "blinded"
labs(title = "Correlation between OR_BICR and OR_INV",
subtitle = paste0("r = ", round(r_value, 3), " (95% CI: ", round(r_ci[1], 3), "-", round(r_ci[2], 3), ")",
"\nR² = ", round(R2_value, 3), " (95% CI: ", round(R2_ci[1], 3), ")"),
x = "Log LE OR for Response",
y = "Log BICR OR for Response",
color = "Study Type"))   # 设置图例标题
ggplot(ORds, aes(x = log(OR_INV), y = log(OR_BICR), size = Sample_size, color = Label)) +
geom_point(alpha = 0.3) +  # 绘制散点
geom_smooth(method = "lm", se = TRUE, color = "black", size = 0.5, inherit.aes = FALSE,
aes(x = log(OR_INV), y = log(OR_BICR))) +  # 如果不要置信区间 se=FALSE
scale_size_continuous(name = "Sample Size", range = c(2, 10)) +
scale_color_manual(values = c("open label" = "red", "blinded" = "blue")) +  # Only "open label" and "blinded"
labs(title = "Correlation between OR_BICR and OR_INV",
subtitle = paste0("r = ", round(r_value, 3), " (95% CI: ", round(r_ci[1], 3), "-", round(r_ci[2], 3), ")",
"\nR² = ", round(R2_value, 3), " (95% CI: ", round(R2_ci[1], 3), ")"),
x = "Log LE OR for Response",
y = "Log BICR OR for Response",
color = "Study Type")   # 设置图例标题
ggplot(ORds, aes(x = log(OR_INV), y = log(OR_BICR), size = Sample_size, color = Label)) +
geom_point(alpha = 0.3) +  # 绘制散点
geom_smooth(method = "lm", se = TRUE, color = "black", size = 0.5, inherit.aes = FALSE,
aes(x = log(OR_INV), y = log(OR_BICR))) +  # 如果不要置信区间 se=FALSE
scale_color_manual(values = c("open label" = "red", "blinded" = "blue")) +  # Only "open label" and "blinded"
labs(title = "Correlation between OR_BICR and OR_INV",
subtitle = paste0("r = ", round(r_value, 3), " (95% CI: ", round(r_ci[1], 3), "-", round(r_ci[2], 3), ")",
"\nR² = ", round(R2_value, 3), " (95% CI: ", round(R2_ci[1], 3), ")"),
x = "Log LE OR for Response",
y = "Log BICR OR for Response",
color = "Study Type")   # 设置图例标题
ggplot(ORds, aes(x = log(OR_INV), y = log(OR_BICR), size = Sample_size, color = Label)) +
geom_point(alpha = 0.3) +  # 绘制散点
geom_smooth(method = "lm", se = TRUE, color = "black", size = 0.5, inherit.aes = FALSE,
aes(x = log(OR_INV), y = log(OR_BICR))) +  # 如果不要置信区间 se=FALSE
scale_size_continuous(name = "Sample Size", range = c(2, 10)) +
scale_color_manual(values = c("open label" = "red", "blinded" = "blue")) +  # Only "open label" and "blinded"
labs(title = "Correlation between OR_BICR and OR_INV",
subtitle = paste0("r = ", round(r_value, 3), " (95% CI: ", round(r_ci[1], 3), "-", round(r_ci[2], 3), ")",
"\nR² = ", round(R2_value, 3), " (95% CI: ", round(R2_ci[1], 3), ")"),
x = "Log LE OR for Response",
y = "Log BICR OR for Response",
color = "Study Type") +  # 设置图例标题
theme_minimal() +
guides(size = guide_legend())  # 确保size图例正确显示
HRds <- as.data.frame(cbind(ds$ï..PMID, ds$Sample.size, ds$HR.for.BICR.PFS, ds$X95..CI.BICR.HR.L, ds$X95..CI.BICR.HR.U,
ds$HR.for.INV.PFS, ds$X95..CI.INV.L, ds$X95..CI.INV.U,ds$follow.up.time, ds$Cancer.Type, ds$Blinded.open.label,
ds$Study.Phase))
print(ncol(HRds))
# 选择哪些列是数值列，哪些是字符列
num_cols <- 2:9  # 这些是数值列
char_cols <- c(1, 10, 11)  # 这些是字符列
# 转换数值列
for (i in num_cols) {
HRds[, i] <- as.numeric(HRds[, i])
}
# 转换字符列
for (i in char_cols) {
HRds[, i] <- as.character(HRds[, i])
}
########################################################################
#ORR
ds<-read.csv("datainfo_transpose_1.20.csv",stringsAsFactors=FALSE, fileEncoding="latin1")
ds<-ds[ds$Study.Phase=="2",]
ORds<-as.data.frame(cbind(ds$ï..PMID,ds$Sample.size,ds$BICR.ORR.experimental,ds$X95..CI.BICR.ORR.L.experimental,
ds$X95..CI.BICR.ORR.U.experimental,ds$BICR.ORR.control,ds$X95..CI.BICR.ORR.L.control,ds$X95..CI.BICR.ORR.U.control,
ds$INV.ORR.experimental,ds$X95..CI.INV.ORR.L.experimental,ds$X95..CI.INV.ORR.U.experimental,
ds$INV.ORR.control,ds$X95..CI.INV.ORR.L.control,
ds$X95..CI.INV.ORR.U.control, ds$follow.up.time))
ORds$Blinded.open.label <- ds$Blinded.open.label
ORds$Cancer.Type <- ds$Cancer.Type
ORds$Phase <- ds$Study.Phase
# 选择哪些列是数值列，哪些是字符列
num_cols <- 2:15  # 这些是数值列
char_cols <- c(1, 16, 17)  # 这些是字符列
# 转换数值列
for (i in num_cols) {
ORds[, i] <- as.numeric(ORds[, i])
}
# 转换字符列
for (i in char_cols) {
ORds[, i] <- as.character(ORds[, i])
}
colnames(ORds)<-c("PMID","Sample_size","OR_BICR_exp","OR_BICR_L_exp","OR_BICR_U_exp",
"OR_BICR_c","OR_BICR_L_c","OR_BICR_U_c",
"OR_INV_exp","OR_INV_L_exp","OR_INV_U_exp",
"OR_INV_c","OR_INV_L_c","OR_INV_U_c","follow-up time","Label","Cancer_type","Phase")
ORds$OR_BICR<-(ORds$OR_BICR_exp*(1-ORds$OR_BICR_exp))/(ORds$OR_BICR_c*(1-ORds$OR_BICR_c))
ORds$OR_INV<-(ORds$OR_INV_exp*(1-ORds$OR_INV_exp))/(ORds$OR_INV_c*(1-ORds$OR_INV_c))
total_rows <- nrow(ORds)
total_rows
# 统计 Label 为 "open label" "blinded" 和"double-blind"的行数
open_label_count <- sum(ORds$Label == "open label", na.rm = TRUE)
blinded_count <- sum(ORds$Label == "blinded", na.rm = TRUE)
double_blind_count <- sum(ORds$Label == "double-blind", na.rm = TRUE)
# Calculate percentages
open_label_percent <- (open_label_count / total_rows) * 100
blinded_percent <- (blinded_count / total_rows) * 100
double_blind_percent <- (double_blind_count / total_rows) * 100
# Print results
print(paste("Open label count:", open_label_count, "(", round(open_label_percent, 2), "% )"))
print(paste("Blinded count:", blinded_count, "(", round(blinded_percent, 2), "% )"))
print(paste("Double-blind count:", double_blind_count, "(", round(double_blind_percent, 2), "% )"))
View(ORds)
library(readxl)
data_RCT_2_and_3_ <- read_excel("data（RCT 2 and 3）.xlsx")
View(data_RCT_2_and_3_)
ds<- read_excel("data（RCT 2 and 3）.xlsx")
ds<-ds[ds$Study.Phase=="3",& ds$Study.Phase=="2"]
ds<-ds[ds$Study.Phase=="3"| ds$Study.Phase=="2"]
library(readxl)
ds<- read_excel("data（RCT 2 and 3）.xlsx")
ds<-ds[ds$Study.Phase=="3"| ds$Study.Phase=="2"]
ds <- ds[ds$Study.Phase == "2" | ds$Study.Phase == "3", ]
View(ds)
HRds <- as.data.frame(cbind(ds$PMID, ds$Sample.size, ds$HR.for.BICR.PFS, ds$X95..CI.BICR.HR.L, ds$X95..CI.BICR.HR.U,
ds$HR.for.INV.PFS, ds$X95..CI.INV.L, ds$X95..CI.INV.U,ds$follow.up.time, ds$Cancer.Type, ds$Blinded.open.label,
ds$Study.Phase))
View(ds)
HRds <- as.data.frame(cbind(ds$PMID, ds$`Sample size`, ds$`HR for BICR-PFS`, ds$`95% CI BICR-HR L`, ds$`95% CI BICR-HR U`,
ds$`HR for INV-PFS`, ds$`95% CI INV L`, ds$`95% CI INV U`,ds$`follow up time`, ds$`Cancer Type`, ds$`Blinded/open label`,
ds$`Study Phase`))
print(ncol(HRds))
# 选择哪些列是数值列，哪些是字符列
num_cols <- 2:9  # 这些是数值列
char_cols <- c(1, 10, 11)  # 这些是字符列
# 转换数值列
for (i in num_cols) {
HRds[, i] <- as.numeric(HRds[, i])
}
# 转换字符列
for (i in char_cols) {
HRds[, i] <- as.character(HRds[, i])
}
# 设置列名
colnames(HRds) <- c("PMID", "Sample_size", "HR_BICR", "HR_BICR_L", "HR_BICR_U",
"HR_INV", "HR_INV_L", "HR_INV_U", "follow-up time","Cancer_type", "Label","Phase")
# 删除 HR_BICR 和 HR_INV 都是 NA 的行
HRds <- HRds[!is.na(HRds$HR_BICR) & !is.na(HRds$HR_INV),]
# 统计 Label 为 "open label" "blinded" 和"double-blind"的行数
open_label_count <- sum(HRds$Label == "open label", na.rm = TRUE)
open_label_count <- nrow(subset(HRds, Label == "open label"))
print(open_label_count)
blinded_count <- sum(HRds$Label == "blinded", na.rm = TRUE)
print(blinded_count)
blinded_count <- sum(HRds$Label == "double-blind", na.rm = TRUE)
print(blinded_count)
# 统计sample size
count_lt_100 <- sum(HRds$Sample_size < 100, na.rm = TRUE)         # Sample_size < 100
count_100_500 <- sum(HRds$Sample_size >= 100 & HRds$Sample_size <= 500, na.rm = TRUE)  # 100 <= Sample_size <= 500
count_gt_500 <- sum(HRds$Sample_size > 500, na.rm = TRUE)         # Sample_size > 500
print(paste("Sample size < 100:", count_lt_100))
print(paste("Sample size 100-500:", count_100_500))
print(paste("Sample size > 500:", count_gt_500))
#统计cancer type
count_LYM <- sum(HRds$Cancer_type == "LYM", na.rm = TRUE)
count_LEU <- sum(HRds$Cancer_type == "LEU", na.rm = TRUE)
count_MM <- sum(HRds$Cancer_type == "MM", na.rm = TRUE)
print(paste("LYM count:", count_LYM))
print(paste("LEU count:", count_LEU))
print(paste("MM count:", count_MM))
#统计follow-up duration
# 创建一个新列，将 follow-up time 分类为 Q1, Q2, Q3
HRds$followup_category <- cut(HRds$`follow-up time`,
breaks = c(-Inf, 24, 36, Inf),
labels = c("<24", "24-36", ">36"),
right = TRUE)
# Get total number of rows
total_rows <- nrow(HRds)
# Count labels
open_label_count <- sum(HRds$Label == "open label", na.rm = TRUE)
blinded_count <- sum(HRds$Label == "blinded", na.rm = TRUE)
double_blind_count <- sum(HRds$Label == "double-blind", na.rm = TRUE)
# Calculate percentages
open_label_percent <- (open_label_count / total_rows) * 100
blinded_percent <- (blinded_count / total_rows) * 100
double_blind_percent <- (double_blind_count / total_rows) * 100
# Print results
print(paste("Open label count:", open_label_count, "(", round(open_label_percent, 2), "% )"))
print(paste("Blinded count:", blinded_count, "(", round(blinded_percent, 2), "% )"))
print(paste("Double-blind count:", double_blind_count, "(", round(double_blind_percent, 2), "% )"))
# Sample size counts
count_lt_100 <- sum(HRds$Sample_size < 100, na.rm = TRUE)
count_100_500 <- sum(HRds$Sample_size >= 100 & HRds$Sample_size <= 500, na.rm = TRUE)
count_gt_500 <- sum(HRds$Sample_size > 500, na.rm = TRUE)
# Calculate percentages
percent_lt_100 <- (count_lt_100 / total_rows) * 100
percent_100_500 <- (count_100_500 / total_rows) * 100
percent_gt_500 <- (count_gt_500 / total_rows) * 100
# Print results
print(paste("Sample size < 100:", count_lt_100, "(", round(percent_lt_100, 2), "% )"))
print(paste("Sample size 100-500:", count_100_500, "(", round(percent_100_500, 2), "% )"))
print(paste("Sample size > 500:", count_gt_500, "(", round(percent_gt_500, 2), "% )"))
# Cancer type counts
count_LYM <- sum(HRds$Cancer_type == "LYM", na.rm = TRUE)
count_LEU <- sum(HRds$Cancer_type == "LEU", na.rm = TRUE)
count_MM <- sum(HRds$Cancer_type == "MM", na.rm = TRUE)
# Calculate percentages
percent_LYM <- (count_LYM / total_rows) * 100
percent_LEU <- (count_LEU / total_rows) * 100
percent_MM <- (count_MM / total_rows) * 100
# Print results
print(paste("LYM count:", count_LYM, "(", round(percent_LYM, 2), "% )"))
print(paste("LEU count:", count_LEU, "(", round(percent_LEU, 2), "% )"))
print(paste("MM count:", count_MM, "(", round(percent_MM, 2), "% )"))
#统计follow-up duration
# 创建一个新列，将 follow-up time 分类为 Q1, Q2, Q3
HRds$followup_category <- cut(HRds$`follow-up time`,
breaks = c(-Inf, 24, 36, Inf),
labels = c("<24", "24-36", ">36"),
right = TRUE)
# 统计每个类别的数量
followup_counts <- table(HRds$followup_category)
# 计算百分比
followup_percentages <- prop.table(followup_counts) * 100
print(followup_counts)
print(followup_percentages)
# 统计sample size
q1 <- quantile(HRds$Sample_size, probs = 0.25, na.rm = TRUE)
q3 <- quantile(HRds$Sample_size, probs = 0.75, na.rm = TRUE)
count_lt_Q1 <- sum(HRds$Sample_size < q1, na.rm = TRUE)
count_Q1_Q3 <- sum(HRds$Sample_size >= q1 & HRds$Sample_size <= q3, na.rm = TRUE)
count_gt_Q3 <- sum(HRds$Sample_size > q3, na.rm = TRUE)
print(paste("样本量 Q1（25%分位数）:", round(q1, 1)))
print(paste("样本量 Q3（75%分位数）:", round(q3, 1)))
print(paste("Sample size < Q1:", count_lt_Q1))
print(paste("Sample size Q1~Q3:", count_Q1_Q3))
print(paste("Sample size > Q3:", count_gt_Q3))
# Sample size counts
count_lt_Q1 <- sum(HRds$Sample_size < q1, na.rm = TRUE)
count_Q1_Q3 <- sum(HRds$Sample_size >= q1 & HRds$Sample_size <= q3, na.rm = TRUE)
count_gt_Q3 <- sum(HRds$Sample_size > q3, na.rm = TRUE)
percent_lt_Q1 <- (count_lt_Q1 / total_valid) * 100
percent_Q1_Q3 <- (count_Q1_Q3 / total_valid) * 100
# Sample size counts
total_valid <- sum(!is.na(HRds$Sample_size))
count_lt_Q1 <- sum(HRds$Sample_size < q1, na.rm = TRUE)
count_Q1_Q3 <- sum(HRds$Sample_size >= q1 & HRds$Sample_size <= q3, na.rm = TRUE)
count_gt_Q3 <- sum(HRds$Sample_size > q3, na.rm = TRUE)
percent_lt_Q1 <- (count_lt_Q1 / total_valid) * 100
percent_Q1_Q3 <- (count_Q1_Q3 / total_valid) * 100
percent_gt_Q3 <- (count_gt_Q3 / total_valid) * 100
print(paste("样本量分位数参考 | Q1:", round(q1, 1), "| Q3:", round(q3, 1)))
# 输出统计结果（带百分比）
print(paste("Sample size < Q1:", count_lt_Q1,
"(", round(percent_lt_Q1, 1), "% )"))
print(paste("Sample size Q1~Q3:", count_Q1_Q3,
"(", round(percent_Q1_Q3, 1), "% )"))
print(paste("Sample size > Q3:", count_gt_Q3,
"(", round(percent_gt_Q3, 1), "% )"))
ds<- read_excel("data（RCT 2 and 3）.xlsx")
ORds<-as.data.frame(cbind(ds$PMID,ds$`Sample size`,ds$`BICR-ORR-experimental`,ds$`95% CI BICR ORR L-experimental`,
ds$`95% CI BICR ORR U-experimental`,ds$`BICR-ORR-control`,ds$`95% CI BICR ORR L-control`,ds$`95% CI BICR ORR U-control`,
ds$`INV-ORR-experimental`,ds$`95% CI INV ORR L-experimental`,ds$`95% CI INV ORR U-experimental`,
ds$`INV-ORR-control`,ds$`95% CI INV ORR L-control`,
ds$`95% CI INV ORR U-control`, ds$`follow up time`))
ORds$Blinded.open.label <- ds$`Blinded/open label`
ORds$Cancer.Type <- ds$`Cancer Type`
ORds$Phase <- ds$`Study Phase`
# 选择哪些列是数值列，哪些是字符列
num_cols <- 2:15  # 这些是数值列
char_cols <- c(1, 16, 17)  # 这些是字符列
# 转换数值列
for (i in num_cols) {
ORds[, i] <- as.numeric(ORds[, i])
}
# 转换字符列
for (i in char_cols) {
ORds[, i] <- as.character(ORds[, i])
}
colnames(ORds)<-c("PMID","Sample_size","OR_BICR_exp","OR_BICR_L_exp","OR_BICR_U_exp",
"OR_BICR_c","OR_BICR_L_c","OR_BICR_U_c",
"OR_INV_exp","OR_INV_L_exp","OR_INV_U_exp",
"OR_INV_c","OR_INV_L_c","OR_INV_U_c","follow-up time","Label","Cancer_type","Phase")
ORds$OR_BICR<-(ORds$OR_BICR_exp*(1-ORds$OR_BICR_exp))/(ORds$OR_BICR_c*(1-ORds$OR_BICR_c))
ORds$OR_INV<-(ORds$OR_INV_exp*(1-ORds$OR_INV_exp))/(ORds$OR_INV_c*(1-ORds$OR_INV_c))
ORds<-ORds[!is.na(ORds$OR_BICR)&!is.na(ORds$OR_INV),]        ###计算phase 2时清洗数据有问题
total_rows <- nrow(ORds)
# 统计 Label 为 "open label" "blinded" 和"double-blind"的行数
open_label_count <- sum(ORds$Label == "open label", na.rm = TRUE)
blinded_count <- sum(ORds$Label == "blinded", na.rm = TRUE)
double_blind_count <- sum(ORds$Label == "double-blind", na.rm = TRUE)
# Calculate percentages
open_label_percent <- (open_label_count / total_rows) * 100
blinded_percent <- (blinded_count / total_rows) * 100
double_blind_percent <- (double_blind_count / total_rows) * 100
# Print results
print(paste("Open label count:", open_label_count, "(", round(open_label_percent, 2), "% )"))
print(paste("Blinded count:", blinded_count, "(", round(blinded_percent, 2), "% )"))
print(paste("Double-blind count:", double_blind_count, "(", round(double_blind_percent, 2), "% )"))
# 统计Sample size counts
q1 <- quantile(ORds$Sample_size, probs = 0.25, na.rm = TRUE)
q3 <- quantile(ORds$Sample_size, probs = 0.75, na.rm = TRUE)
total_valid <- sum(!is.na(ORds$Sample_size))
# 统计区间数量
count_lt_Q1 <- sum(ORds$Sample_size < q1, na.rm = TRUE)
count_Q1_Q3 <- sum(ORds$Sample_size >= q1 & ORds$Sample_size <= q3, na.rm = TRUE)
count_gt_Q3 <- sum(ORds$Sample_size > q3, na.rm = TRUE)
# 计算百分比
percent_lt_Q1 <- (count_lt_Q1 / total_valid) * 100
percent_Q1_Q3 <- (count_Q1_Q3 / total_valid) * 100
percent_gt_Q3 <- (count_gt_Q3 / total_valid) * 100
# 输出统计结果（带百分比）
print(paste("Sample size < Q1:", count_lt_Q1,
"(", round(percent_lt_Q1, 1), "% )"))
print(paste("Sample size Q1~Q3:", count_Q1_Q3,
"(", round(percent_Q1_Q3, 1), "% )"))
print(paste("Sample size > Q3:", count_gt_Q3,
"(", round(percent_gt_Q3, 1), "% )"))
# 统计Cancer type counts
count_LYM <- sum(ORds$Cancer_type == "LYM", na.rm = TRUE)
count_LEU <- sum(ORds$Cancer_type == "LEU", na.rm = TRUE)
count_MM <- sum(ORds$Cancer_type == "MM", na.rm = TRUE)
# Calculate percentages
percent_LYM <- (count_LYM / total_rows) * 100
percent_LEU <- (count_LEU / total_rows) * 100
percent_MM <- (count_MM / total_rows) * 100
# Print results
print(paste("LYM count:", count_LYM, "(", round(percent_LYM, 2), "% )"))
print(paste("LEU count:", count_LEU, "(", round(percent_LEU, 2), "% )"))
print(paste("MM count:", count_MM, "(", round(percent_MM, 2), "% )"))
#统计follow-up duration
# 创建一个新列，将 follow-up time 分类为 Q1, Q2, Q3
ORds$followup_category <- cut(ORds$`follow-up time`,
breaks = c(-Inf, 24, 36, Inf),
labels = c("<24", "24-36", ">36"),
right = TRUE)
#or
ORds$followup_category <- cut(ORds$`follow-up time`,
breaks = c(-Inf, 30, Inf),
labels = c("<30", ">30"),
right = TRUE)
#统计follow-up duration
# 创建一个新列，将 follow-up time 分类为 Q1, Q2, Q3
ORds$followup_category <- cut(ORds$`follow-up time`,
breaks = c(-Inf, 24, 36, Inf),
labels = c("<24", "24-36", ">36"),
right = TRUE)
# 统计每个类别的数量
followup_counts <- table(ORds$followup_category)
# 计算百分比
followup_percentages <- prop.table(followup_counts) * 100
print(followup_counts)
print(followup_percentages)
###########################################################################
# 计算HRR
library(lme4)
# 确保数值列转换为数值型
HRds$HR_BICR <- as.numeric(HRds$HR_BICR)
HRds$HR_INV <- as.numeric(HRds$HR_INV)
HRds$Sample_size <- as.numeric(HRds$Sample_size)
HRds$HRR <- ifelse(!is.na(HRds$HR_BICR) & !is.na(HRds$HR_INV) & HRds$HR_INV != 0,
HRds$HR_INV / HRds$HR_BICR, NA)
# 定义 HRR 的区间
HRds$HRR_bin <- cut(HRds$HRR,
breaks = c(-Inf, 0.85, 1, 1.15, Inf),
labels = c("≤0.85", "(0.85, 1]", "(1, 1.15]", ">1.15"),
include.lowest = TRUE)
# 统计每个区间的数量
HRR_counts <- table(HRds$HRR_bin)
# 计算百分比
HRR_percentages <- round((HRR_counts / sum(HRR_counts)) * 100, 2)
# 打印结果
print(HRR_counts)
print(HRR_percentages)
# 定义 Sample_size 的区间
q1 <- quantile(HRds$Sample_size, probs = 0.25, na.rm = TRUE)
q3 <- quantile(HRds$Sample_size, probs = 0.75, na.rm = TRUE)
# 定义基于分位数的区间
sample_size_bins <- cut(HRds$Sample_size,
breaks = c(-Inf, q1, q3, Inf),
labels = c(
paste0("<Q1(", round(q1,1), ")"),
paste0("Q1-Q3(", round(q1,1), "-", round(q3,1), ")"),
paste0(">Q3(", round(q3,1), ")")
),
include.lowest = TRUE)
# 计算交叉统计
HRR_sample_counts <- table(sample_size_bins, HRds$HRR_bin)
HRR_sample_percentages <- round(prop.table(HRR_sample_counts, margin = 1) * 100, 2)
# 输出分位数参考值
cat("\n样本量分位数参考值:\n")
cat(paste(" Q1 (25%分位点):", round(q1, 1), "\n",
"Q3 (75%分位点):", round(q3, 1), "\n\n"))
# 打印统计结果
cat("样本量区间 vs HRR分布 - 频数表:\n")
print(HRR_sample_counts)
cat("\n样本量区间 vs HRR分布 - 行百分比:\n")
print(HRR_sample_percentages)
#定义masking
HRR_label_sample_counts <- table(HRds$Label, HRds$HRR_bin)
print(HRR_label_sample_counts)
HRR_label_percentages <- round(prop.table(HRR_label_sample_counts, margin = 1) * 100, 2)
print(HRR_label_percentages)
#定义Cancer type
HRR_cancer_type_counts <- table(HRds$Cancer_type,HRds$HRR_bin)
print(HRR_cancer_type_counts)
HRR_cancer_percentages <- round(prop.table(HRR_cancer_type_counts, margin = 1) * 100, 2)
print(HRR_cancer_percentages)
#定义follow-up time
HRR_followup_counts <- table(HRds$followup_category, HRds$HRR_bin)
HRR_followup_percent <- prop.table(HRR_followup_counts, margin = 1) * 100
print(round(HRR_followup_counts, 2))
print(round(HRR_followup_percent, 2))
